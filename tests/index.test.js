/**
 * @jest-environment jsdom
 */

// Generated by CodiumAI

const { characterOrder } = require('../js/index.js')


describe('characterOrder', () => {

    // Returns an array with the same length as the input array.
    it('should return an array with the same length as the input array', () => {
      const inputArray = [1, 2, 3, 4, 5];
      const result = characterOrder(inputArray);
      expect(result.length).toBe(inputArray.length);
    });

    // Returns an array with the same elements as the input array.
    it('should return an array with the same elements as the input array', () => {
      const inputArray = [1, 2, 3, 4, 5];
      const result = characterOrder(inputArray);
      expect(result).toEqual(expect.arrayContaining(inputArray));
    });

    // Returns an array with elements in a different order than the input array.
    it('should return an array with elements in a different order than the input array', () => {
      const inputArray = [1, 2, 3, 4, 5];
      const result = characterOrder(inputArray);
      expect(result).not.toEqual(inputArray);
    });

    // Works correctly with an empty array.
    it('should work correctly with an empty array', () => {
      const inputArray = [];
      const result = characterOrder(inputArray);
      expect(result).toEqual([]);
    });

    // Throws an error if the input is not an array.
    it('should throw an error if the input is not an array', () => {
      const input = "not an array";
      expect(() => characterOrder(input)).toThrowError("Input must be an array");
    });

    // Works correctly with an array of length 1.
    it('should work correctly with an array of length 1', () => {
      const inputArray = [1];
      const result = characterOrder(inputArray);
      expect(result).toEqual(inputArray);
    });
});
